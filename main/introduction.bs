Introduction {#intro}
=====================

The VIADE data model contains a specification for a common data model to represent routes in RDF inside Solid 
 data Pods.

## Definitions ## {#definitions}

A <dfn export>data pod</dfn> is aÂ place for storing documents,
with mechanisms for controlling who can access what.

A <dfn export>Solid app</dfn> is an application
that reads or writes data from one or more [=data pods=].

## Namespaces ## {#namespaces}
<table>
<tbody>
<tr><th>Prefix</th><th>Namespace</th><th>Description</th></tr>
<tr><td>rdf</td><td>http://www.w3.org/1999/02/22-rdf-syntax-ns#</td><td>[[!rdf-schema]]</td></tr>
<tr><td>ldp</td><td>http://www.w3.org/ns/ldp#</td><td>[[!LDP]]</td></tr>
<tr><td>solid</td><td>http://www.w3.org/ns/solid/terms#</td><td>Solid Terms</td></tr>
</tbody>
</table>

## Data model ## {#dataModel}

A **route** must contain a name, optionally it can have a description.
Its composed by at least one GeoCoordinate and may or not have a list of comments and media elements.

The **GeoCoordinates** must have latitude and longitude. They can have as optional properties a name, altitude and a physical address.

A **UserComment** must contain the text of the comment, the time it was published and the author, being the last one a IRI to a pod profile shape.

And finally, an **Image** or a **Video** must have an IRI to te resource, another IRI to the pod profile of the author and the time it was published.

<xmp highlight="turtle">
prefix :  <http://arquisoft.github.io/viadeSpec/>
prefix schema: <http://schema.org/>
prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#>
prefix xsd:    <http://www.w3.org/2001/XMLSchema#>
prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

# Represents a route
:Route {
	schema:name		    xsd:string	 ;
	schema:description	xsd:string ? ;
	:points	            @:Points ;
	:hasComments		xsd:string OR @:UserComment * ;
	:hasMediaAttached	@:Image OR @:Video *;
}

# List of points of a route    
:Points CLOSED {
   rdf:first @:GeoCoordinates ;
   rdf:rest  [rdf:nil] OR @:Points
}
    
# Represents geo coordinates following: https://schema.org/GeoCoordinates
:GeoCoordinates {
	schema:elevation		xsd:decimal  ? ;
	schema:latitude			xsd:decimal	;
	schema:longitude		xsd:decimal	;
}

:UserComment IRI {
	schema:text			 xsd:string;
	schema:publishedDate xsd:datetime;
	schema:author		 @:PodProfile;
}

:Image {
	schema:contentUrl	 IRI ;
	schema:publishedDate xsd:datetime;
	schema:author		 @:PodProfile;
}

:Video {
	schema:contentUrl	 IRI;
	schema:publishedDate xsd:dateTime;
	schema:author		 @:PodProfile;
}

:PodProfile IRI 
</xmp>

## Examples ## {#examples}

An example of a route in Turtle following the previous Shape could be:

<xmp highlight="turtle">
prefix viade:  <http://arquisoft.github.io/viadeSpec/>
prefix :       <http://example.org/>
prefix schema: <http://schema.org/>
prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#>
prefix xsd:    <http://www.w3.org/2001/XMLSchema#>

:myRoute a viade:Route ;
 schema:name "My first route" ;
 schema:description "This is an example of route" ;
 viade:points ( 
  [ schema:latitude 23.0 ; schema:longitude 43.0 ]
  [ schema:latitude 24.0 ; schema:longitude 44.0 ]
 );
 viade:hasComments "I really enjoyed this route" ;
 viade:hasMediaAttached :media1 .

:media1 schema:contentUrl <http://example.org/picture.jpg> ;
        schema:publishedDate "2020-03-26T21:32:52"^^xsd:dateTime ;
        schema:author <https://labra.solid.community/profile/card#me> .
</xmp>


